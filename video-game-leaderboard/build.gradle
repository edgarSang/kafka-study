plugins {
    id 'application'
    id 'net.ltgt.errorprone' version '0.6.1'
}

ext {
    kafkaVersion = '2.7.0'
}

application {
    mainClassName = 'com.magicalpipelines.App'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.apache.kafka:kafka-streams:${kafkaVersion}"

    // logging
    implementation 'org.slf4j:slf4j-api:1.7.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // required for custom serdes
    implementation 'com.google.code.gson:gson:2.8.5'

    // required for interactive queries (server)
    implementation 'io.javalin:javalin:3.12.0'
    // required for interactive queries (client)
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    errorprone 'com.google.errorprone:error_prone_core:2.3.2'
    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'

}

tasks.withType(JavaCompile).configureEach { javaCompile ->
    javaCompile.dependsOn 'googleJavaFormat'
    options.compilerArgs << "-Xlint:deprecation"
    options.encoding = 'UTF-8'
    options.errorprone {
        disableWarningsInGeneratedCode = true
        excludedPaths = '.*/build/generated/.*'
    }
}

task runFirst(type: JavaExec) {
    main = application.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'host'    : 'localhost',
            'port'    : '7000',
            'stateDir': '/Users/user/Documents/dev/kaf/tmp/tmp/kafka-streams'
    ]
}

task runSecond(type: JavaExec) {
    main = application.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'host'    : 'localhost',
            'port'    : '7100',
            'stateDir': '/Users/user/Documents/dev/kaf/tmp/kafka-streams2'
    ]
}

run.dependsOn runFirst

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
